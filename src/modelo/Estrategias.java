package modelo;

/**
 *
 * @author Escar
 * 
 *  Modelo Estrategias posiciones con las formaciones de cada jugador en la cancha
 */
public class Estrategias {
    public static int[][] inicio(boolean local){ //local abajo
        int[][] p=new int[11][2];
        if (local==true){
            p[0][0]=120;p[0][1]=20;
            p[1][0]=120 ;p[1][1]= 40;
            p[2][0]= 120; p[2][1]= 60;
            p[3][0]=120 ; p[3][1]=100 ;
            p[4][0]=120 ; p[4][1]=120 ;
            p[5][0]=120 ; p[5][1]=140 ;
            p[6][0]= 170; p[6][1]=20 ;
            p[7][0]= 170; p[7][1]=140 ;
            p[8][0]=190 ; p[8][1]=50 ;
            p[9][0]= 190; p[9][1]=110 ;
            p[10][0]=219 ; p[10][1]= 80;
        }else{
            p[10][0]=0;p[10][1]=80;
            p[9][0]=40 ;p[9][1]= 50;
            p[8][0]= 40; p[8][1]= 110;
            p[7][0]=60 ; p[7][1]=20 ;
            p[6][0]=60 ; p[6][1]=140 ;
            p[5][0]=110 ; p[5][1]=20 ;
            p[4][0]= 110; p[4][1]=40 ;
            p[3][0]= 110; p[3][1]=60 ;
            p[2][0]=110 ; p[2][1]=100 ;
            p[1][0]= 110; p[1][1]=120 ;
            p[0][0]=110 ; p[0][1]= 140;
        }
        return p;
    }
    
    public static int[][] equilibrado(boolean local){
        int[][] p=new int[11][2];
        if (local){
            p[0][0]=40;p[0][1]=50;
            p[1][0]=40 ;p[1][1]= 110;
            p[2][0]= 90; p[2][1]= 20;
            p[3][0]=90 ; p[3][1]=140 ;
            p[4][0]=120 ; p[4][1]=60 ;
            p[5][0]=120 ; p[5][1]=110 ;
            p[6][0]= 170; p[6][1]=20 ;
            p[7][0]= 170; p[7][1]=140 ;
            p[8][0]=190 ; p[8][1]=50 ;
            p[9][0]= 190; p[9][1]=110 ;
            p[10][0]=219 ; p[10][1]= 80;
        }else{
            p[10][0]=40;p[10][1]=50;
            p[9][0]=40 ;p[9][1]= 110;
            p[8][0]= 90; p[8][1]= 20;
            p[7][0]=90 ; p[7][1]=140 ;
            p[6][0]=120 ; p[6][1]=60 ;
            p[5][0]=120 ; p[5][1]=110 ;
            p[4][0]= 170; p[4][1]=20 ;
            p[3][0]= 170; p[3][1]=140 ;
            p[2][0]=190 ; p[2][1]=50 ;
            p[1][0]= 190; p[1][1]=110 ;
            p[0][0]=219 ; p[0][1]= 80;
        }
        return p;
    }
    
    public static int[][] volanteEn(boolean local){
        int[][] p=new int[11][2];   
        if (local){
            p[0][0]=40;p[0][1]=50;
            p[1][0]=40 ;p[1][1]= 110;
            p[2][0]= 90; p[2][1]= 80;
            p[3][0]=120 ; p[3][1]=30 ;
            p[4][0]=120 ; p[4][1]=130 ;
            p[5][0]=140 ; p[5][1]=80 ;
            p[6][0]= 170; p[6][1]=20 ;
            p[7][0]= 170; p[7][1]=140 ;
            p[8][0]=190 ; p[8][1]=50 ;
            p[9][0]= 190; p[9][1]=110 ;
            p[10][0]=219 ; p[10][1]= 80;
        }else{
            p[10][0]=40;p[10][1]=50;
            p[9][0]=40 ;p[9][1]= 110;
            p[8][0]= 90; p[8][1]= 80;
            p[7][0]=120 ; p[7][1]=30 ;
            p[6][0]=120 ; p[6][1]=130 ;
            p[5][0]=140 ; p[5][1]=80 ;
            p[4][0]= 170; p[4][1]=20 ;
            p[3][0]= 170; p[3][1]=140 ;
            p[2][0]=190 ; p[2][1]=50 ;
            p[1][0]= 190; p[1][1]=110 ;
            p[0][0]=219 ; p[0][1]= 80;
        }
        return p;
    }
        
    public static int[][] ataque(boolean local){
        int[][]p=new int[11][2];
        if(local){
            p[0][0]=40;p[0][1]=80;
            p[1][0]=50 ;p[1][1]= 20;
            p[2][0]= 50; p[2][1]= 140;
            p[3][0]=110 ; p[3][1]=30 ;
            p[4][0]=110 ; p[4][1]=130 ;
            p[5][0]=140 ; p[5][1]=80 ;
            p[6][0]= 170; p[6][1]=20 ;
            p[7][0]= 170; p[7][1]=140 ;
            p[8][0]=190 ; p[8][1]=50 ;
            p[9][0]= 190; p[9][1]=110 ;
            p[10][0]=219 ; p[10][1]= 80; 
        }else{
            p[10][0]=40;p[10][1]=80;
            p[9][0]=50 ;p[9][1]= 20;
            p[8][0]= 50; p[8][1]= 140;
            p[7][0]=110 ; p[7][1]=30 ;
            p[6][0]=110 ; p[6][1]=130 ;
            p[5][0]=140 ; p[5][1]=80 ;
            p[4][0]= 170; p[4][1]=20 ;
            p[3][0]= 170; p[3][1]=140 ;
            p[2][0]=190 ; p[2][1]=50 ;
            p[1][0]= 190; p[1][1]=110 ;
            p[0][0]=219 ; p[0][1]= 80;      
        }
        return p;
    }
    
    public static int[][] posesionBa(boolean local){
        int[][]p=new int[11][2];
        if(local){
            p[0][0]=40;p[0][1]=80;
            p[1][0]=80 ;p[1][1]= 20;
            p[2][0]= 80; p[2][1]= 140;
            p[3][0]=110 ; p[3][1]=80 ;
            p[4][0]=130 ; p[4][1]=40 ;
            p[5][0]=130 ; p[5][1]=120 ;
            p[6][0]= 170; p[6][1]=20 ;
            p[7][0]= 170; p[7][1]=140 ;
            p[8][0]=190 ; p[8][1]=50 ;
            p[9][0]= 190; p[9][1]=110 ;
            p[10][0]=219 ; p[10][1]= 80;
        }else{
            p[10][0]=40;p[10][1]=80;
            p[9][0]=80 ;p[9][1]= 20;
            p[8][0]= 80; p[8][1]= 140;
            p[7][0]=110 ; p[7][1]=80 ;
            p[6][0]=130 ; p[6][1]=40 ;
            p[5][0]=130 ; p[5][1]=120 ;
            p[4][0]= 170; p[4][1]=20 ;
            p[3][0]= 170; p[3][1]=140 ;
            p[2][0]=190 ; p[2][1]=50 ;
            p[1][0]= 190; p[1][1]=110 ;
            p[0][0]=219 ; p[0][1]= 80;           
        }
        return p;
    }
        
    public static int[][] laterales(boolean local){
        int[][] p=new int[11][2];
        if(local){
            p[0][0]=40;p[0][1]=50;
            p[1][0]=40 ;p[1][1]= 110;
            p[2][0]= 90; p[2][1]= 20;
            p[3][0]=90 ; p[3][1]=140 ;
            p[4][0]=80 ; p[4][1]=100 ;
            p[5][0]=130 ; p[5][1]=50 ;
            p[6][0]= 130; p[6][1]=110 ;
            p[7][0]= 180; p[7][1]=20 ;
            p[8][0]=180 ; p[8][1]=130 ;
            p[9][0]= 200; p[9][1]=80 ;
            p[10][0]=219 ; p[10][1]= 80;
        }else{
            p[10][0]=40;p[10][1]=50;
            p[9][0]=40 ;p[9][1]= 110;
            p[8][0]= 90; p[8][1]= 20;
            p[7][0]=90 ; p[7][1]=140 ;
            p[6][0]=80 ; p[6][1]=100 ;
            p[5][0]=130 ; p[5][1]=50 ;
            p[4][0]= 130; p[4][1]=110 ;
            p[3][0]= 180; p[3][1]=20 ;
            p[2][0]=180 ; p[2][1]=130 ;
            p[1][0]= 200; p[1][1]=80 ;
            p[0][0]=219 ; p[0][1]= 80;
        }
        return p;
            
    }
    
    public static int[][] volantes(boolean local){
        int[][]p=new int[11][2];
        if(local){  
            p[0][0]=40;p[0][1]=80;
            p[1][0]=50 ;p[1][1]= 20;
            p[2][0]= 50; p[2][1]= 140;
            p[3][0]=90 ; p[3][1]=80 ;
            p[4][0]=110 ; p[4][1]=30 ;
            p[5][0]=110 ; p[5][1]=130 ;
            p[6][0]= 140; p[6][1]=80 ;
            p[7][0]= 180; p[7][1]=30 ;
            p[8][0]=180 ; p[8][1]=130 ;
            p[9][0]= 200; p[9][1]=80 ;
            p[10][0]=219 ; p[10][1]= 80;
        }else{
            p[10][0]=40;p[10][1]=80;
            p[9][0]=50 ;p[9][1]= 20;
            p[8][0]= 50; p[8][1]= 140;
            p[7][0]=90 ; p[7][1]=80 ;
            p[6][0]=110 ; p[6][1]=30 ;
            p[5][0]=110 ; p[5][1]=130 ;
            p[4][0]= 140; p[4][1]=80 ;
            p[3][0]= 180; p[3][1]=30 ;
            p[2][0]=180 ; p[2][1]=130 ;
            p[1][0]= 200; p[1][1]=80 ;
            p[0][0]=219 ; p[0][1]= 80;
        }
            return p;
    }
        
    public static int[][] defensaUno(boolean local){
        int[][]p=new int[11][2];
        if(local){
            p[0][0]=40;p[0][1]=80;
            p[1][0]=100 ;p[1][1]= 30;
            p[2][0]= 100; p[2][1]= 130;
            p[3][0]=130 ; p[3][1]=60 ;
            p[4][0]=130 ; p[4][1]=10 ;
            p[5][0]=170 ; p[5][1]=20 ;
            p[6][0]= 170; p[6][1]=140 ;
            p[7][0]= 180; p[7][1]=50 ;
            p[8][0]=180 ; p[8][1]=110 ;
            p[9][0]= 190; p[9][1]=80 ;
            p[10][0]=219 ; p[10][1]= 80;
        }else{
            p[10][0]=40;p[10][1]=80;
            p[9][0]=100 ;p[9][1]= 30;
            p[8][0]= 100; p[8][1]= 130;
            p[7][0]=130 ; p[7][1]=60 ;
            p[6][0]=130 ; p[6][1]=10 ;
            p[5][0]=170 ; p[2][1]=20 ;
            p[4][0]= 170; p[1][1]=140 ;
            p[3][0]= 180; p[3][1]=50 ;
            p[2][0]=180 ; p[2][1]=110 ;
            p[1][0]= 190; p[1][1]=80 ;
            p[0][0]=219 ; p[0][1]= 80;
        }
        return p;
    }
    
    public static int[][] defensaDos(boolean local){
        int[][]p=new int[11][2];
        if(local){
            p[0][0]=40;p[0][1]=80;
            p[1][0]=60 ;p[1][1]= 80;
            p[2][0]= 110; p[2][1]= 30;
            p[3][0]=110 ; p[3][1]=130 ;
            p[4][0]=140 ; p[4][1]=80 ;
            p[5][0]=170 ; p[5][1]=20 ;
            p[6][0]= 170; p[6][1]=140 ;
            p[7][0]= 180; p[7][1]=50 ;
            p[8][0]=180 ; p[8][1]=110 ;
            p[9][0]= 190; p[9][1]=80 ;
            p[10][0]=219 ; p[10][1]= 80;
        }else{
            p[10][0]=40;p[10][1]=80;
            p[9][0]=60 ;p[9][1]= 80;
            p[8][0]= 110; p[8][1]= 30;
            p[7][0]=110 ; p[7][1]=130 ;
            p[6][0]=140 ; p[6][1]=80 ;
            p[5][0]=170 ; p[5][1]=20 ;
            p[4][0]= 170; p[4][1]=140 ;
            p[3][0]= 180; p[3][1]=50 ;
            p[2][0]=180 ; p[2][1]=110 ;
            p[1][0]= 190; p[1][1]=80 ;
            p[0][0]=219 ; p[0][1]= 80;   
        }
        return p;
    }
}


